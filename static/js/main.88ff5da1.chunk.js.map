{"version":3,"sources":["RatingGroup.tsx","Question.tsx","App.tsx","index.tsx"],"names":["RatingGroup","min","max","step","name","style","display","gridAutoFlow","columnGap","Array","fill","map","_val","index","type","value","id","defaultChecked","htmlFor","marginLeft","Question","question","answers","answer","idx","rowGap","App","questions","toString","description","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMAQaA,EAAyB,SAAC,GAKhC,IAAD,IAJJC,WAII,MAJE,EAIF,MAHJC,WAGI,MAHE,GAGF,MAFJC,YAEI,MAFG,EAEH,EADJC,EACI,EADJA,KAEA,OACE,qBACEC,MAAO,CACLC,QAAS,OACTC,aAAc,SACdC,UAAW,OAJf,SAOGC,OAAOP,EAAMD,GAAOE,EAAO,GACzBO,KAAK,GACLC,KAAI,SAACC,EAAMC,GAAP,OACH,iCACE,mCACEC,KAAK,QACLC,MAAOF,EACPT,KAAMA,EACNY,GAAIZ,EAAOS,GACI,IAAVA,EAAc,CAAEI,gBAAgB,GAAS,KAEhD,uBAAOC,QAASd,EAAOS,EAAOR,MAAO,CAAEc,WAAY,OAAnD,SACGN,MATMA,SCjBRO,EAAsB,SAAC,GAA+B,IAA7BJ,EAA4B,EAA5BA,GAAIK,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAClD,OACE,gCACGD,EACD,6BACGC,EAAQX,KAAI,SAACY,EAAQC,GAAT,OACX,6BACE,sBAAKnB,MAAO,CAAEC,QAAS,OAAQmB,OAAQ,OAAvC,UACGF,EACD,cAAC,EAAD,CAAanB,KAAMY,EAAKQ,QAHnBA,Y,OCuCJE,EAjDH,WACV,OACE,iCACE,mCACE,kEACA,6pBAYA,2tBAYE,uBAZF,sBAgBF,uBACA,6BACGC,IAAoBhB,KAAI,SAACU,EAAUR,GAAX,OACvB,6BACE,cAAC,EAAD,CACEG,GAAIH,EAAMe,WACVP,SAAUA,EAASQ,YACnBP,QAASD,EAASC,WAJbT,Y,MCnCnBiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.88ff5da1.chunk.js","sourcesContent":["import React, { FC } from \"react\";\n\ninterface Props {\n  min?: number;\n  max?: number;\n  step?: number;\n  name: string;\n}\nexport const RatingGroup: FC<Props> = ({\n  min = 0,\n  max = 10,\n  step = 1,\n  name,\n}) => {\n  return (\n    <div\n      style={{\n        display: \"grid\",\n        gridAutoFlow: \"column\",\n        columnGap: \"8px\",\n      }}\n    >\n      {Array((max - min) / step + 1)\n        .fill(0)\n        .map((_val, index) => (\n          <span key={index}>\n            <input\n              type=\"radio\"\n              value={index}\n              name={name}\n              id={name + index}\n              {...(index === 0 ? { defaultChecked: true } : {})}\n            />\n            <label htmlFor={name + index} style={{ marginLeft: \"4px\" }}>\n              {index}\n            </label>\n          </span>\n        ))}\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport { RatingGroup } from \"./RatingGroup\";\n\ninterface Props {\n  id: string;\n  question: string;\n  answers: string[];\n}\nexport const Question: FC<Props> = ({ id, question, answers }) => {\n  return (\n    <div>\n      {question}\n      <ul>\n        {answers.map((answer, idx) => (\n          <li key={idx}>\n            <div style={{ display: \"grid\", rowGap: \"8px\" }}>\n              {answer}\n              <RatingGroup name={id + idx} />\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Question } from \"./Question\";\nimport * as questions from \"./data.json\";\n\nconst App = () => {\n  return (\n    <main>\n      <header>\n        <h2>Teamrollen-Selbsteinschätzung</h2>\n        <p>\n          Folgender Test, der auf Annahmen des Psychologen Meredith Belbin\n          aufbaut, dient dazu, die optimale Rolle in einem Team für dich zu\n          finden. Das Ergebnis darf dabei jedoch nicht als absolut aufgefasst\n          werden, sondern soll die Aufmerksamkeit auf persönliches\n          Entwicklungspotential lenken. Es ist wichtig zu wissen, dass es keine\n          Wertigkeit zwischen den einzelnen Rollen gibt. Weder ist ein\n          Beobachter besser als ein Umsetzer noch umgekehrt. Die Rollen zeigen\n          stattdessen mögliche Stärken und Schwächen der eigenen Art, Dinge\n          anzugehen, und eröffnen so Möglichkeiten, die eigenen Kompetenzen\n          zielführend einzusetzen.\n        </p>\n        <p>\n          dir einen oder mehrere Rollentypen zuzuordnen, verteile je Frage 1-7\n          exakt zehn Punkte auf die Alternativen a bis i: Aussagen, denen du\n          zustimmen kannst, verteilst du relativ zu den übrigen\n          Antwortmöglichkeiten viele Punkte. Je stärker die Punkte aufgeteilt\n          werden, desto unklarer fällt das Ergebnis aus. Mut zu klaren\n          Entscheidungen ist also angemessen! Wenn du mit der Bearbeitung fertig\n          bist, gib deinen Bogen Janosch oder Alex. Um Anonymität zu\n          gewährleisten, versehe deinen Bogen bitte mit einem Pseudonym. Dein\n          Ergebnis mit der Beschreibung deiner Teamrolle inklusive Stärken und\n          Schwächen findest du im htmlForum des Kurses, sobald die Fragebögen\n          ausgewertet sind.\n          <br />\n          Viel Spaß!\n        </p>\n      </header>\n      <hr />\n      <ul>\n        {questions.questions.map((question, index) => (\n          <li key={index}>\n            <Question\n              id={index.toString()}\n              question={question.description}\n              answers={question.answers}\n            />\n          </li>\n        ))}\n      </ul>\n    </main>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}