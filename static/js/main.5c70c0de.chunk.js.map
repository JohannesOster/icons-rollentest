{"version":3,"sources":["Question.tsx","evalutationMatrix.ts","RoleTest.tsx","utils.ts","App.tsx","index.tsx"],"names":["Question","forwardRef","ref","id","question","answers","value","onChange","map","answer","idx","style","display","rowGap","type","name","evaluationMatrix","RoleTest","useState","result","setResult","step","setStep","questions","dirty","setDirty","error","setError","Array","fill","values","setValues","validate","useCallback","currSum","reduce","sum","curr","undefined","useEffect","onSubmit","event","preventDefault","K","U","B","M","T","S","P","forEach","val","qIndex","ans","aIndex","max","Object","entries","key","color","target","vals","obj","path","stack","substr","replace","normalizePath","split","filter","length","shift","set","toString","description","justifyContent","onClick","disabled","cursor","App","basename","process","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c70c0de.chunk.js","sourcesContent":["import React, { ChangeEvent, forwardRef } from \"react\";\n\ninterface Props {\n  id: string;\n  question: string;\n  answers: string[];\n  value?: string[];\n  onChange: (event: ChangeEvent<HTMLInputElement>) => void;\n}\nexport const Question = forwardRef<HTMLInputElement, Props>(\n  ({ id, question, answers, value = [], onChange }, ref) => {\n    return (\n      <div>\n        {question}\n        <ul>\n          {answers.map((answer, idx) => (\n            <li key={idx}>\n              <div style={{ display: \"grid\", rowGap: \"8px\" }}>\n                {answer}\n                <input\n                  onChange={onChange}\n                  type=\"number\"\n                  name={`${id}.${idx}`}\n                  value={value[idx]}\n                  id={id}\n                />\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n);\n","// evaluationM[0][0] = pers1  = means > question 0 answert 0 points to pers1\nconst evaluationMatrix = [\n  [\"B\", \"M\", \"S\", \"T\", \"U\", \"W/W\", \"K\", \"P\", \"N/E\"],\n  [\"T\", \"U\", \"B\", \"M\", \"N/E\", \"P\", \"W/W\", \"S\", \"K\"],\n  [\"K\", \"P\", \"U\", \"N/E\", \"T\", \"W/W\", \"S\", \"B\", \"M\"],\n  [\"W/W\", \"S\", \"T\", \"N/E\", \"K\", \"P\", \"U\", \"M\", \"B\"],\n  [\"M\", \"K\", \"W/W\", \"B\", \"U\", \"T\", \"N/E\", \"P\", \"S\"],\n  [\"N/E\", \"T\", \"K\", \"P\", \"B\", \"M\", \"U\", \"W/W\", \"S\"],\n  [\"U\", \"B\", \"P\", \"S\", \"W/W\", \"M\", \"N/E\", \"K\", \"T\"],\n];\n\nexport default evaluationMatrix;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { Question } from \"./Question\";\nimport * as questions from \"./data.json\";\nimport evaluationMatrix from \"./evalutationMatrix\";\nimport { set } from \"utils\";\n\nexport const RoleTest = () => {\n  const [result, setResult] = useState<string | null>(null);\n  const [step, setStep] = useState(0);\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n\n    const result = {\n      K: 0,\n      U: 0,\n      \"N/E\": 0,\n      B: 0,\n      M: 0,\n      \"W/W\": 0,\n      T: 0,\n      S: 0,\n      P: 0,\n    };\n    questions.questions.forEach((val, qIndex) => {\n      val.answers.forEach((ans, aIndex) => {\n        result[evaluationMatrix[qIndex][aIndex]] += +values.questions[qIndex][\n          aIndex\n        ];\n      });\n    });\n    const max = Object.entries(result).reduce(\n      (max, [key, value]) => {\n        if (max.value < value) {\n          max.key = key;\n          max.value = value;\n        }\n        return max;\n      },\n      { key: \"\", value: 0 }\n    );\n\n    setResult(max.key);\n  };\n\n  const [dirty, setDirty] = useState(questions.questions.map(() => false));\n  const [error, setError] = useState<string | undefined>();\n  const [values, setValues] = useState({\n    questions: questions.questions.map(() =>\n      Array(9)\n        .fill(0)\n        .map(() => \"\")\n    ),\n  });\n\n  const validate = useCallback(() => {\n    const currSum = values.questions[step].reduce((sum, curr) => {\n      return sum + +curr;\n    }, 0);\n\n    if (currSum < 10) setError(\"Zu wenig! Bitte vergeben Sie genau 10 Punkte.\");\n    else if (currSum > 10)\n      setError(\"Zu viel! Bitte vergeben Sie genau 10 Punkte.\");\n    else setError(undefined);\n  }, [values, setError, step]);\n\n  const onChange = (event) => {\n    const { name, value } = event.target;\n    if (value > 10) return;\n    const vals = values;\n    set(vals, name, value);\n    setValues({ ...vals });\n    setDirty((curr) => {\n      curr[step] = true;\n      return [...curr];\n    });\n  };\n\n  useEffect(() => {\n    validate();\n  }, [values, step, validate]);\n\n  return (\n    <main>\n      <header>\n        <h2>Teamrollen-Selbsteinschätzung</h2>\n        <p>\n          Folgender Test, der auf Annahmen des Psychologen Meredith Belbin\n          aufbaut, dient dazu, die optimale Rolle in einem Team für dich zu\n          finden. Das Ergebnis darf dabei jedoch nicht als absolut aufgefasst\n          werden, sondern soll die Aufmerksamkeit auf persönliches\n          Entwicklungspotential lenken. Es ist wichtig zu wissen, dass es keine\n          Wertigkeit zwischen den einzelnen Rollen gibt. Weder ist ein\n          Beobachter besser als ein Umsetzer noch umgekehrt. Die Rollen zeigen\n          stattdessen mögliche Stärken und Schwächen der eigenen Art, Dinge\n          anzugehen, und eröffnen so Möglichkeiten, die eigenen Kompetenzen\n          zielführend einzusetzen.\n        </p>\n        <p>\n          dir einen oder mehrere Rollentypen zuzuordnen, verteile je Frage 1-7\n          exakt zehn Punkte auf die Alternativen a bis i: Aussagen, denen du\n          zustimmen kannst, verteilst du relativ zu den übrigen\n          Antwortmöglichkeiten viele Punkte. Je stärker die Punkte aufgeteilt\n          werden, desto unklarer fällt das Ergebnis aus. Mut zu klaren\n          Entscheidungen ist also angemessen! Wenn du mit der Bearbeitung fertig\n          bist, gib deinen Bogen Janosch oder Alex. Um Anonymität zu\n          gewährleisten, versehe deinen Bogen bitte mit einem Pseudonym. Dein\n          Ergebnis mit der Beschreibung deiner Teamrolle inklusive Stärken und\n          Schwächen findest du im htmlForum des Kurses, sobald die Fragebögen\n          ausgewertet sind.\n          <br />\n          Viel Spaß!\n        </p>\n      </header>\n      <hr />\n      {!result && (\n        <form onSubmit={onSubmit} style={{ display: \"grid\", rowGap: \"12px\" }}>\n          <span style={{ color: \"red\" }}>{dirty[step] && error}</span>\n          <Question\n            id={`questions.${step}`}\n            onChange={onChange}\n            value={values.questions[step]}\n            question={\n              step.toString() + \". \" + questions.questions[step].description\n            }\n            answers={questions.questions[step].answers}\n          />\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n            <button\n              type=\"button\"\n              onClick={(event) => {\n                event.preventDefault();\n                setStep((curr) => curr - 1);\n              }}\n              disabled={step === 0}\n            >\n              Zurück\n            </button>\n            {step < questions.questions.length - 1 ? (\n              <button\n                type=\"submit\"\n                onClick={(event) => {\n                  event.preventDefault();\n                  setStep((curr) => curr + 1);\n                }}\n                disabled={!!error}\n              >\n                Weiter\n              </button>\n            ) : (\n              <button type=\"submit\" style={{ cursor: \"pointer\" }}>\n                Auswerten\n              </button>\n            )}\n          </div>\n        </form>\n      )}\n      {result && `Dein Ergebnis lautet ${result}`}\n    </main>\n  );\n};\n","/** Normalize path to only use dot notation\n * (change path[1].path to path.1.path) */\nconst normalizePath = (path: string) => {\n  if (!path) return \"\";\n  /* If the first path element is [] indexed\n   * it cannot be replaced by . but must be removed */\n  if (path[0] === \"[\") path = path.substr(1);\n  return path.replace(\"[\", \".\").replace(\"]\", \"\");\n};\n\nexport const set = (obj: any, path: string, value: string): any => {\n  const stack = normalizePath(path)\n    .split(\".\")\n    .filter((val) => val !== \"\");\n  while (stack.length > 1) {\n    obj = obj[stack.shift()!];\n  }\n  const help = stack.shift()!;\n  obj[help] = value;\n};\n","import React from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport { RoleTest } from \"RoleTest\";\n\nconst App = () => {\n  return (\n    <HashRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path=\"/\" component={RoleTest} />\n      </Switch>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}